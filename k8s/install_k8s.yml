- hosts: k8s

  tasks:
  - name: Create k8s module
    copy:
      dest: "/etc/modules-load.d/k8s.conf"
      content: |
              br_netfilter
    register: result

  - name: Create k8s sysctl
    copy: 
      dest: "/etc/sysctl.d/k8s.conf"
      content: |
                net.bridge.bridge-nf-call-ip6tables = 1
                net.bridge.bridge-nf-call-iptables = 1
    register: result

  - name: Create containerd in sysctl
    copy: 
      dest: "/etc/modules-load.d/containerd.conf"
      content: |
              overlay
              br_netfilter
    register: result

  - name: Create k8s-cri in sysctl
    copy: 
      dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
      content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.ipv4.ip_forward                 = 1
              net.bridge.bridge-nf-call-ip6tables = 1
    register: result

  - shell: sysctl -p --system
    become: yes
    when: result.changed


  - firewalld:
      port: 6443/tcp
      permanent: true
      state: enabled
  - firewalld:
      port: 2379-2380/tcp
      permanent: true
      state: enabled
  - firewalld:
      port: 10250-10252/tcp
      permanent: true
      state: enabled
  - firewalld:
      port: 30000-32767/tcp
      permanent: true
      state: enabled  
  
  - name: Disable SELinux
    ansible.posix.selinux:
      state: disabled

  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    ansible.posix.selinux:
      policy: targeted
      state: permissive

  - name: Create kubernetes repo
    copy: 
      dest: "/etc/yum.repos.d/kubernetes.repo"
      content: | 
              [kubernetes]
              name=Kubernetes
              baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
              enabled=1
              gpgcheck=1
              repo_gpgcheck=1
              gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
              exclude=kubelet kubeadm kubectl
  
  # - name: Add docker repo
  #   yum_repository:
  #     name: docker-repo
  #     description: "Repo for hosts in testing"
  #     baseurl: "https://download.docker.com/linux/centos/docker-ce.repo"
  #     enabled: yes
  - name: Add docker-ce repository
    shell: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    args:
      creates: /etc/yum.repos.d/docker-ce.repo

  - name: Remove runc for containerd
    dnf:
      name: '{{ item }}'
      state: absent
      update_cache: True
      disable_excludes: skubernetes
    with_items:
      - runc

  - name: Install prereqs packages
    dnf:
      name: '{{ item }}'
      state: present
      update_cache: True
      disable_excludes: kubernetes
    with_items:
      - yum-utils 
      - device-mapper-persistent-data 
      - lvm2
      
  - name: Install containerd.io packages
    dnf:
      name: '{{ item }}'
      state: present
      update_cache: True
      disable_excludes: kubernetes
    with_items:
      - containerd.io
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /etc/some_directory
      state: directory
    register: cresult

  - shell: containerd config default | sudo tee /etc/containerd/config.toml
    become: yes
    when: cresult.changed

  - name: Install k8s packages
    dnf:
      name: '{{ item }}'
      state: present
      update_cache: True
      disable_excludes: kubernetes
    with_items:
      - kubelet 
      - kubeadm 
      - kubectl

  - name: Enable service httpd and ensure it is not masked
    ansible.builtin.systemd:
      name: kubelet
      enabled: yes

  - name: Restart dameon, enable kubelet, and start
    ansible.builtin.systemd:
      name: kubelet
      state: started
      daemon_reload: yes
      enabled: yes
